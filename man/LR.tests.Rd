% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LR.tests.R
\name{LR.tests}
\alias{LR.tests}
\alias{MarkovTest}
\alias{optimal_weights_multiple}
\alias{optimal_weights_matrix}
\title{Log-rank based test for the validity of the Markov assumption}
\usage{
LR.tests(
  db_long = db_long,
  times = times,
  transition = transition,
  replicas = 1000,
  formula = NULL,
  fn = list(function(x) mean(abs(x), na.rm = TRUE)),
  fn2 = list(function(x) mean(x, na.rm = TRUE)),
  min_time = 0,
  other_weights = NULL,
  dist = c("poisson", "normal")
)
}
\arguments{
\item{db_long}{Multi-state data in \code{msdata} format. Should also contain
(dummy codings of) the relevant covariates; no factors allowed.}

\item{times}{Grid of time points at which to compute the statistic.}

\item{transition}{Transition number of the transition to be tested (in the
transition matrix as attribute to \code{data}).}

\item{replicas}{Number of wild bootstrap replications to perform.}

\item{formula}{Right-hand side of the formula. If NULL will fit with no
covariates (formula="1" will also work), offset terms can also be specified.}

\item{fn}{A list of summary functions to be applied to the individual zbar
traces (or a list of lists)}

\item{fn2}{A list of summary functions to be applied to the overall
chi-squared trace}

\item{min_time}{The minimum time for calculating optimal weights}

\item{other_weights}{Other (than optimal) weights can be specified here}

\item{dist}{Distribution of wild bootstrap random weights, either "poisson"
for centred Poisson (default), or "normal" for standard normal}
}
\value{
MarkovTest returns an object of class "MarkovTest", which is a list
with the following items: \item{orig_stat}{Summary statistic for each of the
starting states} \item{orig_ch_stat}{Overall chi-squared summary statistic}
\item{p_stat_wb}{P-values corresponding to each of the summary statistics
for each starting state} \item{p_ch_stat_wb}{P-values for overall
chi-squared summary statistic} \item{b_stat_wb}{Bootstrap summary statistics
for each of the starting states} \item{zbar}{Individual traces for each of
the starting states} \item{nobs_grid}{The number of events after time s for
each s in the grid} \item{Nsub}{Number of patients who are ever at risk of
the transition of interest} \item{est_quant}{Pointwise 2.5 and 97.5 quantile
limits for each of the traces} \item{obs_chisq_trace}{Trace of the
chi-squared statistic} \item{nch_wb_trace}{Individual values of the
chi-squared statistic trace for the wild bootstrap samples}
\item{n_wb_trace}{Individual values of the log-rank z statistic traces for
the wild bootstrap samples} \item{est_cov}{Estimated covariance matrix
between the log-rank statistics at each grid point} \item{transition}{The
transition number tested} \item{from}{The from state of the transition
tested} \item{to}{The to state of the transition tested} \item{B}{The number
of wild bootstrap replications} \item{dist}{The distribution used in the
wild bootstrap} \item{qualset}{Set of qualifying states corresponding to the
components of the above traces} \item{coxfit}{Fitted coxph object}
\item{fn}{List of functions applied to state-specific trace} \item{fn2}{List
of functions applied to overall trace}
}
\description{
Function MarkovTest performs the log-rank test described in Titman & Putter
(2020). Function optimal_weights_matrix implements the optimal weighting for
the state-specific trace. Function optimal_weights_multiple implements the
optimal weighting for the chi-squared trace.
}
\examples{

library(mstate)
library(markovMSM)

data("colonIDM")
colonIDM$event1[colonIDM$time1==colonIDM$Stime & colonIDM$event1==1]<-0
positions<-list(c(2, 3), c(3), c())
namesStates =  c("Alive", "Rec",  "Death")
tmat <-transMatMSM(positions, namesStates)
timesNames = c(NA, "time1","Stime")
status=c(NA, "event1","event")
trans = tmat
db_long<- prepMSM(data=colonIDM, trans, timesNames, status)
times=c(90, 180, 365, 730, 1095, 1460)
res<-LR.tests(db_long=db_long, times=times, transition = 3, replicas = 50)
res$localTestLR
res$glovalTestLR
data("ebmt4")
positions=list(c(2, 3, 5, 6), c(4, 5, 6), c(4, 5, 6), c(5, 6), c(6), c())
namesStates =  c("Tx", "Rec", "AE", "Rec+AE", "Rel", "Death")
tmat <-transMatMSM(positions, namesStates)
timesNames = c(NA, "rec", "ae","recae", "rel", "srv")
status=c(NA, "rec.s", "ae.s", "recae.s","rel.s", "srv.s")
trans = tmat
db_long<- prepMSM(data=ebmt4, trans, timesNames, status)
times=c(90, 180, 365, 730, 1095, 1460)
res<-LR.tests(db_long=db_long, times=times, transition = 9, replicas = 50)
res$localTestLR
res$glovalTestLR

data(prothr)
res<-LR.tests(db_long=prothr, times=times, transition = 4, replicas = 50)
res$localTestLR
res$globalTestLR
}
\references{
Titman AC, Putter H (2020). General tests of the Markov property
in multi-state models. \emph{Biostatistics} To appear.
}
\author{
Andrew Titman \email{a.titman@lancaster.ac.uk}, transported to
mstate by Hein Putter \email{H.Putter@lumc.nl}

Gustavo Soutinho and Luis Meira-Machado.
}
